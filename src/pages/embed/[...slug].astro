---
/**
 * Dynamic Route Renderer for Markdown-based Documentation Pages
 *
 * This file defines a dynamic route that loads content from the `docs` collection
 * based on the URL slug. It supports nested routes using Astro's `[...slug]` syntax.
 *
 * ‚úÖ What it does:
 * - Uses `getStaticPaths()` to define all possible documentation paths at build time
 * - Extracts the current `slug` from the URL
 * - Looks up the corresponding entry in the `docs` content collection
 * - If found, renders the associated Markdown/MDX content via `entry.render()`
 * - If not found, throws an error (handled by Astro‚Äôs error page)
 *
 * üîÅ This setup allows you to organize your documentation files inside `/src/content/docs/`
 * using nested folders and access them via clean, SEO-friendly URLs.
 *
 * Example:
 *    /databases/01-intro-to-sql ‚Üí loads `src/content/docs/databases/01-intro-to-sql.md`
 *
 * Styling is handled via a custom CSS file at `/src/styles/custom.css`.
 *
 * Author:      hackbraten68 <mosdev@posteo.com>
 * GitHub:      https://github.com/hackbraten68
 * Version:     1.0.0
 * Created:     2025-06-04
 * Environment: Astro + Netlify Functions
 * License:     MIT
 */
import { getCollection } from 'astro:content';
import '../../styles/custom.css';

// Dynamic Route: Generate static paths for all slugs
export async function getStaticPaths() {
  const docs = await getCollection('docs');
  return docs.map((entry) => ({
    params: { slug: entry.slug },
  }));
}

// Get current slug
const fullSlug = Astro.params.slug;
const allDocs = await getCollection('docs');
const entry = allDocs.find((e) => e.slug === fullSlug);

// Debugging output (optional)
console.log("FullSlug:", fullSlug);
console.log("All slugs:", allDocs.map(e => e.slug));
console.log("Gefundener Entry:", entry);

// Error fallback
if (!entry) {
  throw new Error(`Eintrag nicht gefunden: ${fullSlug}`);
}

// Render content component
const { Content } = await entry.render();
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>{entry.data.title}</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: sans-serif;
            background: white;
            color: black;
            display: flex;
        }

        main {
            box-sizing: border-box;
            width: 100%;
        }

        img {
            width: 100% !important;
            max-width: 100% !important;
            height: auto !important;
            display: block;
  }
</style>

  </head>
  <body>
    <main>
      <Content />
    </main>
  </body>
</html>
